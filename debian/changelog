librapidjson (1.1.0) unstable; urgency=low

  * Highlights:
    - Added JSON Pointer
    - Added JSON Schema
    - Added relaxed JSON syntax (comment, trailing comma, NaN/Infinity)
    - Iterating array/object with C++11 Range-based for loop
    - Reduce memory overhead of each Value from 24 bytes to 16 bytes in x86-64
      architecture.

  * Added:
    - Add GenericDocument ctor overload to specify JSON type (#369)
    - Add FAQ (#372, #373, #374, #376)
    - Add forward declaration header fwd.h
    - Add @PlatformIO Library Registry manifest file (#400)
    - Implement assignment operator for BigInteger (#404)
    - Add comments support (#443)
    - Adding coapp definition (#460)
    - documenttest.cpp: EXPECT_THROW when checking empty allocator (470)
    - GenericDocument: add implicit conversion to ParseResult (#480)
    - Use with C++ linkage on Windows ARM (#485)
    - Detect little endian for Microsoft ARM targets
    - Check Nan/Inf when writing a double (#510)
    - Add JSON Schema Implementation (#522)
    - Add iostream wrapper (#530)
    - Add Jsonx example for converting JSON into JSONx (a XML format) (#531)
    - Add optional unresolvedTokenIndex parameter to Pointer::Get() (#532)
    - Add encoding validation option for Writer/PrettyWriter (#534)
    - Add Writer::SetMaxDecimalPlaces() (#536)
    - Support {0, } and {0, m} in Regex (#539)
    - Add Value::Get/SetFloat(), Value::IsLossLessFloat/Double() (#540)
    - Add stream position check to reader unit tests (#541)
    - Add Templated accessors and range-based for (#542)
    - Add (Pretty)Writer::RawValue() (#543)
    - Add Document::Parse(std::string), Document::Parse(const char*, size_t length)
      and related APIs. (#553)
    - Add move constructor for GenericSchemaDocument (#554)
    - Add VS2010 and VS2015 to AppVeyor CI (#555)
    - Add parse-by-parts example (#556, #562)
    - Support parse number as string (#564, #589)
    - Add kFormatSingleLineArray for PrettyWriter (#577)
    - Added optional support for trailing commas (#584)
    - Added filterkey and filterkeydom examples (#615)
    - Added npm docs (#639)
    - Allow options for writing and parsing NaN/Infinity (#641)
    - Add std::string overload to PrettyWriter::Key() when RAPIDJSON_HAS_STDSTRING
      is defined (#698)

  * Fixed:
    - Fix gcc/clang/vc warnings (#350, #394, #397, #444, #447, #473, #515, #582,
      #589, #595, #667)
    - Fix documentation (#482, #511, #550, #557, #614, #635, #660)
    - Fix emscripten alignment issue (#535)
    - Fix missing allocator to uses of AddMember in document (#365)
    - CMake will no longer complain that the minimum CMake version is not
      specified (#501)
    - Make it usable with old VC8 (VS2005) (#383)
    - Prohibit C++11 move from Document to Value (#391)
    - Try to fix incorrect 64-bit alignment (#419)
    - Check return of fwrite to avoid warn_unused_result build failures (#421)
    - Fix UB in GenericDocument::ParseStream (#426)
    - Keep Document value unchanged on parse error (#439)
    - Add missing return statement (#450)
    - Fix Document::Parse(const Ch*) for transcoding (#478)
    - encodings.h: fix typo in preprocessor condition (#495)
    - Custom Microsoft headers are necessary only for Visual Studio 2012 and
      lower (#559)
    - Fix memory leak for invalid regex (26e69ff)
    - Fix a bug in schema minimum/maximum keywords for 64-bit integer (e7149d6)
    - Fix a crash bug in regex (#605)
    - Fix schema "required" keyword cannot handle duplicated keys (#609)
    - Fix cmake CMP0054 warning (#612)
    - Added missing include guards in istreamwrapper.h and ostreamwrapper.h
      (#634)
    - Fix undefined behaviour (#646)
    - Fix buffer overrun using PutN (#673)
    - Fix rapidjson::value::Getstd::string() may returns wrong data (#681)
    - Add Flush() for all value types (#689)
    - Handle malloc() fail in PoolAllocator (#691)
    - Fix builds on x32 platform. #703

  * Changed:
    - Clarify problematic JSON license (#392)
    - Move Travis to container based infrastructure (#504, #558)
    - Make whitespace array more compact (#513)
    - Optimize Writer::WriteString() with SIMD (#544)
    - x86-64 48-bit pointer optimization for GenericValue (#546)
    - Define RAPIDJSON_HAS_CXX11_RVALUE_REFS directly in clang (#617)
    - Make GenericSchemaDocument constructor explicit (#674)
    - Optimize FindMember when use std::string (#690)

 -- Danil Osherov <shindo@yandex-team.ru>  Sat, 27 Aug 2016 21:00:00 +0400

librapidjson (1.0.2) unstable; urgency=low

  * Fixes:
    - Include rapidjson.h for all internal/error headers.
    - Parsing some numbers incorrectly in full-precision mode
      (kFullPrecisionParseFlag)
    - Fix alignment of 64bit platforms
    - Fix MemoryPoolAllocator::Clear() to clear user-buffer
    - Change Document::ParseStream() to use stack allocator for Reader
    - CMakeLists for include as a thirdparty in projects

  * Features:
    - Add Value::XXXMember(...) overloads for std::string

 -- Danil Osherov <shindo@yandex-team.ru>  Tue, 30 Jun 2015 22:00:00 +0400

librapidjson (1.0.1) unstable; urgency=low

  * Fixes:
    - Parsing of some numbers (e.g. "1e-00011111111111") causing assertion
    - Visual C++ 32-bit compilation error in diyfp.h

 -- Danil Osherov <shindo@yandex-team.ru>  Tue, 30 Jun 2015 22:00:00 +0400

librapidjson (1.0.0) unstable; urgency=low

  * Fixes:
    - Fixed a bug in trimming long number sequence
    - Fix double quote in unicode escape
    - Fix negative zero roundtrip (double only)
    - Remove an invalid Document::ParseInsitu() API
    - Remove dead branches and add more unit tests for coverage

  * Features:
    - RFC 7159
    - Optional Iterative Parser
    - Deep-copy values
    - Error code and message
    - ASCII Encoding
    - kParseStopWhenDoneFlag
    - kParseFullPrecisionFlag
    - Add Key() to handler concept
    - C++11 compatibility and support
    - Standardize behavior of memcpy() and malloc()
    - Add version macros

  * Optimizations
    - Optimized number-to-string and vice versa conversions
    - Short-String Optimization
    - Local stream optimization by traits

  * Build
    - Migrating from Premake to CMAKE
    - Remove other JSON libraries for performance comparison
    - Travis & Appveyor Continuous Integration, with Valgrind verification
    - Resolve all warning reports

  * Documentation
    - Redo all documentation
    - English, Simplified Chinese
    - Doxygen with Markdown
    - Gitbook

 -- Danil Osherov <shindo@yandex-team.ru>  Sat, 11 Apr 2015 22:00:00 +0400

librapidjson (0.99.9) unstable; urgency=low

  * Initial release.

 -- Danil Osherov <shindo@yandex-team.ru>  Sat, 11 Apr 2015 22:00:00 +0400
